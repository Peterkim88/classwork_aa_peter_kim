quit
nums_dup
n
step
nums_dup
num_dup
n
nums_dup[idx] != nil
step
nums_dup
n
nums_dup
n
nums_dup
n
nums_dup[idx] + 1 == nums_dup[idx + 1]
nums_dup[idx] + 1
step
nums_dup
quit
n
nums_dup
n
nums_dup
n
nums_dup
n
nums_dup
n
nums_dup[idx] + 1 == nums_dup[idx + 1]
nums_dup[idx] - 1 == nums_dup[idx + 1]
nums_dup[idx + 1]
nums_dup[idx] + 1
idx
step
nums_dup
quit
nums_dup[idx + 1]
nums_dup[idx]
n
nums_dup
n
nums_dup
n
nums_dup
n
nums_dup[idx] + 1 == nums_dup[idx + 1]
nums_dup[idx] - 1 == nums_dup[idx + 1]
nums_dup[idx + 1]
nums_dup[idx]
idx
step
idx
n
nums_dup
quit
mersenne
power_two
n
num
disp i
mersenne
power_two
quit
mersenne
power_two
quit
power_two
mersenne
n
mersenne
disp i
i
n
mersenne
quit
sub_matrix
final_matrix
quit
matrices
sub_matrix
final_matrix
quit
sub_matrix
quit
sub_idx
idx
n
final_matrix
